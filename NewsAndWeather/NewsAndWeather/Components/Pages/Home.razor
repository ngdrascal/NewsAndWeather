@page "/"
@* @rendermode @(new InteractiveServerRenderMode(false)) *@
@using WeatherDataClients

@inject IWeatherClientCollection WeatherClientCollection

<PageTitle>News and Weather</PageTitle>

<Clock />

<div id="weatherCarousel" class="carousel carousel-dark slide" data-bs-ride="carousel">
    <div class="carousel-inner">
        @foreach (var loc in _locations)
        {
            <div class="carousel-item active">
                <h1>Current conditions for @loc.LocationName</h1>
            </div>
            <div class="carousel-item">
                <h6>@loc.LocationName</h6>
                <div class="card-group">
                    @foreach (var dailyForecast in loc.DailyForecasts.Take(5))
                    {
                        <DailyForecast Date="@dailyForecast.Date"
                                       LowTemp="@dailyForecast.LowTemp"
                                       HighTemp="@dailyForecast.HighTemp"
                                       Description="Partly Sunny"
                                       Icon="02d"/>
                    }
                </div>
            </div>
        }
    </div>
</div>

@code
{
    private string _message = "Loading ...";
    private readonly List<WeatherData> _locations = new();
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            foreach (var client in WeatherClientCollection.GetAll())
            {
                var data = await client.GetForecastsAsync();
                if (data != null)
                    _locations.Add(data);
            }
        }
        catch (Exception)
        {
            _message = "Forecasts currently unavailable.";
        }
    }
}
